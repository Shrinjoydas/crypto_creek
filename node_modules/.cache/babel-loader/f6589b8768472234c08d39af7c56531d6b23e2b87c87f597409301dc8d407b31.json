{"ast":null,"code":"var _jsxFileName = \"G:\\\\Coding\\\\React Class\\\\Crypto_Creek(4th)\\\\src\\\\Component\\\\Exchanges.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container, HStack, Button } from '@chakra-ui/react';\nimport Loader from './Loader';\nimport ExchangeCard from './ExchageCard';\nimport ErrorComponent from './ErrorComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Exchanges() {\n  _s();\n  const [exchanges, setExchanges] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [pages, setPages] = useState(1);\n  const btns = new Array(6).fill(0);\n  useEffect(() => {\n    const fetchExchanges = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`https://api.coingecko.com/api/v3/exchanges?page=${pages}`);\n        setExchanges(data);\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n        setLoading(false);\n      }\n    };\n    fetchExchanges();\n  }, [pages]);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorComponent, {\n    massage: 'Error While Fetching Exchanges'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: 'container.xl',\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        wrap: 'wrap',\n        w: 'full',\n        justifyContent: 'space-evenly',\n        children: exchanges.map(i => /*#__PURE__*/_jsxDEV(ExchangeCard, {\n          name: i.name,\n          img: i.image,\n          rank: i.trust_score_rank,\n          url: i.url\n        }, i.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        w: 'full',\n        p: '8',\n        justifyContent: 'center',\n        children: btns.map((_, index) => /*#__PURE__*/_jsxDEV(Button, {\n          backgroundColor: 'blackAlpha.700',\n          color: 'white',\n          onClick: () => setPages(index + 1),\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Exchanges, \"my2FHhgzsEzRRwabUv1/b1j0HSE=\");\n_c = Exchanges;\nexport default Exchanges;\nvar _c;\n$RefreshReg$(_c, \"Exchanges\");","map":{"version":3,"names":["React","useEffect","useState","axios","Container","HStack","Button","Loader","ExchangeCard","ErrorComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","Exchanges","_s","exchanges","setExchanges","loading","setLoading","error","setError","pages","setPages","btns","Array","fill","fetchExchanges","data","get","massage","fileName","_jsxFileName","lineNumber","columnNumber","maxW","children","wrap","w","justifyContent","map","i","name","img","image","rank","trust_score_rank","url","id","p","_","index","backgroundColor","color","onClick","_c","$RefreshReg$"],"sources":["G:/Coding/React Class/Crypto_Creek(4th)/src/Component/Exchanges.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, HStack, Button } from '@chakra-ui/react';\r\nimport Loader from './Loader';\r\nimport ExchangeCard from './ExchageCard';\r\nimport ErrorComponent from './ErrorComponent';\r\n\r\nfunction Exchanges() {\r\n  const [exchanges, setExchanges] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [pages, setPages] = useState(1);\r\n\r\n  const btns = new Array(6).fill(0);\r\n\r\n  useEffect(() => {\r\n    const fetchExchanges = async () => {\r\n      try {\r\n        const { data } = await axios.get(\r\n          `https://api.coingecko.com/api/v3/exchanges?page=${pages}`\r\n        );\r\n        setExchanges(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(true);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchExchanges();\r\n  }, [pages]);\r\n\r\n  if (error)\r\n    return <ErrorComponent massage={'Error While Fetching Exchanges'} />;\r\n\r\n  return (\r\n    <Container maxW={'container.xl'}>\r\n      {/* Main Containt */}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <HStack wrap={'wrap'} w={'full'} justifyContent={'space-evenly'}>\r\n            {exchanges.map(i => (\r\n              <ExchangeCard\r\n                key={i.id}\r\n                name={i.name}\r\n                img={i.image}\r\n                rank={i.trust_score_rank}\r\n                url={i.url}\r\n              />\r\n            ))}\r\n          </HStack>\r\n\r\n          {/* Page Change Button */}\r\n\r\n          <HStack w={'full'} p={'8'} justifyContent={'center'}>\r\n            {btns.map((_, index) => (\r\n              <Button\r\n                key={index}\r\n                backgroundColor={'blackAlpha.700'}\r\n                color={'white'}\r\n                onClick={() => setPages(index + 1)}\r\n              >\r\n                {index + 1}\r\n              </Button>\r\n            ))}\r\n          </HStack>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Exchanges;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}